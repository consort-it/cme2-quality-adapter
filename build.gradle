plugins {
    id 'org.hidetake.swagger.generator' version '2.11.0'
    id "org.sonarqube" version "2.6.2"
}

apply plugin: 'java'
apply plugin: 'jacoco'

repositories {
    jcenter()
}

version '1.0'
sourceCompatibility = 1.8

dependencies {
    compile group: 'com.sparkjava', name: 'spark-core', version: '2.5.5'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'

    compile group: 'org.pac4j', name: 'spark-pac4j', version: '2.2.0'
    compile group: 'org.pac4j', name: 'pac4j-core', version: '2.2.1'
    compile group: 'org.pac4j', name: 'pac4j-http', version: '2.2.1'
    compile group: 'org.pac4j', name: 'pac4j-jwt', version: '2.2.1'
    compile group: 'com.auth0', name: 'jwks-rsa', version: '0.3.0'
    compile group: 'io.github.cdimascio', name: 'java-dotenv', version: '3.0.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile('org.assertj:assertj-core:3.4.1')
    testCompile "org.mockito:mockito-core:2.+"
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'aws-cost-adapter',
                'Implementation-Version': version,
                'Main-Class': 'com.consort.QualityAdapterApplication'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    with jar
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacoco")
    }
}

swaggerSources {
    qualityadapter {
        inputFile = file('swagger.yaml')
    }
}

def env = System.getenv()
sonarqube {
    properties {
        property "sonar.host.url", env.getOrDefault("SONAR_HOST_URL", "https://cme.dev.k8s.consort-it.de/sonar/")
        property "sonar.login", env.getOrDefault('SONAR_HOST_TOKEN', "")
        property "sonar.projectVersion", getDate()
    }
}

def getDate() {
    def date = new Date()
    return date.format('yyyyMMddHHmmss')
}

build.dependsOn(fatJar)
//check.dependsOn("sonarqube")
//project.tasks["sonarqube"].dependsOn "test"